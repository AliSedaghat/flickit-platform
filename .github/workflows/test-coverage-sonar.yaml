name: Python-test

on:
  push:
    paths:
      - backend/**
    branches: ['*']
  pull_request:
    paths:
      - backend/**
    branches:
      - main
      - stage

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: build
        run: docker build -t backend ./backend
  
  test:
    needs: build
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
    - name: Run migrations
      env: 
        SECRET_KEY: test-secret-key
        DEBUG_VALUE: False
      run: python backend/apps/manage.py migrate
    - name: Run tests
      env: 
        SECRET_KEY: test-secret-key
        DEBUG_VALUE: False
      run: pytest backend/apps


  sonarcloud:
    needs: test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
    - name: Install coverage
      run: |
        pip install coverage
    - name: Run migrations
      env: 
        SECRET_KEY: test-secret-key
        DEBUG_VALUE: False
      run: python backend/apps/manage.py migrate

    - name: Run tests with coverage
      env: 
        SECRET_KEY: test-secret-key
        DEBUG_VALUE: False
      run: |
        coverage run --omit='*/tests/*','*/migrations/*'  -m  pytest backend/apps
        coverage report
        coverage xml
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        COVERAGE_REPORT_PATH: 'coverage.xml'
